[
  {
    "objectID": "posts/Rproject/index.html",
    "href": "posts/Rproject/index.html",
    "title": "RStudio projects",
    "section": "",
    "text": "R projects favor data reproducibility by organizing all files from a project in the same main folder.\nThe project folders should have a clear organization following a publication structure:\nI recommend creating an or fork this repository to your github account. If you start a new project please run the following code to create the file organization\n\nData (raw, pre-processed, processed, shapefiles, rasters, etc.)\nOutput (figures, tables, models)\nManuscript\nOther (supplementary materials).\n\nWe will a few ways to start a new project\n\nRStudio ProjectRStudio Projects with renvRStudio Projects with git\n\n\n1- Creates a separate project from the main RStudio\n2- Improves file management\n\n\n1- Isolates project by managing packages and dependencies\n2- Protect project from packages changes/deprecation\n3- Favors collaboration and reproducibility\n\n\n1- Creates a free repository for our project\n2- Protects project from collapse by creating restoring points (commitment)\n\n\n\nAlthough there are many ways to organize a folder (explorer, github, RStudio console, bash file), an easy way is to create/use a generic code for all your projects\n\nfolders &lt;- c(\"data/raw\",\n             \"data/processed\",\n             \"data/shapefiles\",\n             \"scripts\",\n             \"scripts/models\",\n             \"output/figures\",\n             \"output/tables\",\n             \"output/models\")\n\nsapply(folders,\n       FUN = dir.create,\n       recursive = TRUE)"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "In this presentation I will discuss the advantage of using RStudio projects and Github repositories.\n\n\nRStudio is an integrated development environment for R and Python. It was created by and administered by posit.\n\n\n\n\n\n\n\nOverall, RStudio allows:\n\nDeveloping and testing code\nData visualization\nPackage constructions\nProduction of documents (pdf, .doc, html) based on R markdown or Quarto scripts\nDevelopment of websites\n\nrenv is a dependencies manager that favors isolation of RStudio projects and code reproducibility.\n\n\n\n\n\n\n\ninstall.packages('renv')\n\nRemoves all unwanted/unnecessary packages\nAutomatically detects and install needed dependencies\nInstallation occurs only once (creates relative paths)\nAvoids continuous package updates\nPrevents code breaking\nPermanent functionality\n\nGithub ‘is a platform and cloud-based service for software development and version control using Git, allowing developers to store and manage their code.’\n\n\n\n\n\n\n\nAll our RStudio projects can be stored on Github as repositories following the same project structure. To connect RStudio with Github some basic use of terminal and LINUX language is needed.\nGithub Desktop (GD) is a desktop application that facilitates exchange of data between Github and RStudio."
  },
  {
    "objectID": "intro.html#definitions",
    "href": "intro.html#definitions",
    "title": "Introduction",
    "section": "",
    "text": "RStudio is an integrated development environment for R and Python. It was created by and administered by posit.\n\n\n\n\n\n\n\nOverall, RStudio allows:\n\nDeveloping and testing code\nData visualization\nPackage constructions\nProduction of documents (pdf, .doc, html) based on R markdown or Quarto scripts\nDevelopment of websites\n\nrenv is a dependencies manager that favors isolation of RStudio projects and code reproducibility.\n\n\n\n\n\n\n\ninstall.packages('renv')\n\nRemoves all unwanted/unnecessary packages\nAutomatically detects and install needed dependencies\nInstallation occurs only once (creates relative paths)\nAvoids continuous package updates\nPrevents code breaking\nPermanent functionality\n\nGithub ‘is a platform and cloud-based service for software development and version control using Git, allowing developers to store and manage their code.’\n\n\n\n\n\n\n\nAll our RStudio projects can be stored on Github as repositories following the same project structure. To connect RStudio with Github some basic use of terminal and LINUX language is needed.\nGithub Desktop (GD) is a desktop application that facilitates exchange of data between Github and RStudio."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This demo website will be used to discuss the advantages of creating repositories for your RStudio projects on Github.com"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Using RStudio projects and Github",
    "section": "",
    "text": "RStudio projects\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\nHector Zumbado-Ulate\n\n\n\n\n\n\n  \n\n\n\n\nRenv\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nSep 21, 2023\n\n\nHector Zumbado-Ulate\n\n\n\n\n\n\n  \n\n\n\n\nGithub\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nSep 25, 2023\n\n\nHector Zumbado\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/github/index.html",
    "href": "posts/github/index.html",
    "title": "Github",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\n\n\n\nSome text that is very long and that should take most of the column space.\n\nSome other text that should be below the first paragraph."
  },
  {
    "objectID": "posts/github/index.html#a-title",
    "href": "posts/github/index.html#a-title",
    "title": "Github",
    "section": "A title",
    "text": "A title\n\n\n\n\nSome text that is very long and that should take most of the column space.\n\nSome other text that should be below the first paragraph."
  },
  {
    "objectID": "intro.html#main-functions",
    "href": "intro.html#main-functions",
    "title": "Introduction",
    "section": "",
    "text": "install.packages('renv')\n\nRemoves all unwanted/unnecessary packages\nAutomatically detects and install needed dependencies\nInstallation occurs only once (creates relative paths)\nAvoids continuous package updates\nPrevents code breaking\nPermanent functionality\n\nGithub ‘is a platform and cloud-based service for software development and version control using Git, allowing developers to store and manage their code.’\n\n\n\n\n\n\n\nAll our RStudio projects can be stored on Github as repositories following the same project structure. To connect RStudio with Github some basic use of terminal and LINUX language is needed.\nGithub Desktop (GD) is a desktop application that facilitates exchange of data between Github and RStudio."
  },
  {
    "objectID": "posts/renv2/renv.html",
    "href": "posts/renv2/renv.html",
    "title": "Renv",
    "section": "",
    "text": "renv::init(): Initialize renv. After downloading or starting a project\nrenv::restore(): When you open someone’s project\nrenv::install(): To install a package. Accepts specific versions\nrenv::status(): Check package status\nrenv::snapshot(): Takes a snapshot of installed packages"
  },
  {
    "objectID": "posts/renv2/renv.html#main-functions",
    "href": "posts/renv2/renv.html#main-functions",
    "title": "Renv",
    "section": "",
    "text": "renv::init(): Initialize renv. After downloading or starting a project\nrenv::restore(): When you open someone’s project\nrenv::install(): To install a package. Accepts specific versions\nrenv::status(): Check package status\nrenv::snapshot(): Takes a snapshot of installed packages"
  },
  {
    "objectID": "posts/Rproject/r_proj.html",
    "href": "posts/Rproject/r_proj.html",
    "title": "RStudio projects",
    "section": "",
    "text": "R projects favor data reproducibility by organizing all files from a project in the same main folder.\nThe project folders should have a clear organization following a publication structure:\nI recommend creating an or fork this repository to your github account. If you start a new project please run the following code to create the file organization\n\nData (raw, pre-processed, processed, shapefiles, rasters, etc.)\nOutput (figures, tables, models)\nManuscript\nOther (supplementary materials).\n\nWe will a few ways to start a new project\n\nRStudio ProjectRStudio Projects with renvRStudio Projects with git\n\n\n1- Creates a separate project from the main RStudio\n2- Improves file management\n\n\n1- Isolates project by managing packages and dependencies\n2- Protect project from packages changes/deprecation\n3- Favors collaboration and reproducibility\n\n\n1- Creates a free repository for our project\n2- Protects project from collapse by creating restoring points (commitment)\n\n\n\nAlthough there are many ways to organize a folder (explorer, github, RStudio console, bash file), an easy way is to create/use a generic code for all your projects\n\nfolders &lt;- c(\"data/raw\",\n             \"data/processed\",\n             \"data/shapefiles\",\n             \"scripts\",\n             \"scripts/models\",\n             \"output/figures\",\n             \"output/tables\",\n             \"output/models\")\n\nsapply(folders,\n       FUN = dir.create,\n       recursive = TRUE)"
  },
  {
    "objectID": "posts/renv_r/renv.html",
    "href": "posts/renv_r/renv.html",
    "title": "Renv",
    "section": "",
    "text": "renv::init(): Initialize renv. After downloading or starting a project\nrenv::restore(): When you open someone’s project\nrenv::install(): To install a package. Accepts specific versions\nrenv::status(): Check package status\nrenv::snapshot(): Takes a snapshot of installed packages"
  },
  {
    "objectID": "posts/renv_r/renv.html#main-functions",
    "href": "posts/renv_r/renv.html#main-functions",
    "title": "Renv",
    "section": "",
    "text": "renv::init(): Initialize renv. After downloading or starting a project\nrenv::restore(): When you open someone’s project\nrenv::install(): To install a package. Accepts specific versions\nrenv::status(): Check package status\nrenv::snapshot(): Takes a snapshot of installed packages"
  }
]